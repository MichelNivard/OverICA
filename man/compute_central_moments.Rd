% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{compute_central_moments}
\alias{compute_central_moments}
\title{Compute Unique 4th, 3rd, and 2nd Central Moments Using Precomputed Indices}
\usage{
compute_central_moments(X, indices, third = TRUE)
}
\arguments{
\item{X}{A torch tensor of shape (n, p).}

\item{indices}{A list of precomputed index tensors from \code{compute_unique_moment_indices()}, containing:
\itemize{
\item \code{indices_2nd}: Indices for unique 2nd-order moments.
\item \code{indices_3rd}: Indices for unique 3rd-order moments.
\item \code{indices_4th}: Indices for unique 4th-order moments.
}}

\item{third}{A logical indicating wherther thris order moments are to be considered}
}
\value{
A 1D torch tensor containing all unique moments, concatenated in the order of:
\itemize{
\item 4th-order moments
\item 3rd-order moments
\item 2nd-order moments
}
}
\description{
Given a dataset X of shape (n, p), this function computes the unique central moments:
\itemize{
\item 4th-order moments: E\link{(X_i - mu_i)(X_j - mu_j)(X_k - mu_k)(X_l - mu_l)} for i <= j <= k <= l
\item 3rd-order moments: E\link{(X_i - mu_i)(X_j - mu_j)(X_k - mu_k)} for i <= j <= k
\item 2nd-order moments: E\link{(X_i - mu_i)(X_j - mu_j)} for i <= j
}
}
\details{
Instead of computing all possible moment combinations, this function uses precomputed indices
(from \code{compute_unique_moment_indices()}) to extract only the required values, significantly
improving computational efficiency.

The results are concatenated into a single 1D torch tensor in the order of 4th, 3rd, and 2nd-order moments.
}
